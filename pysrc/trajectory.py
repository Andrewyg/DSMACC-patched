"""
This file is an example of how to use dsmacc in python
as a trajectory model with emissions (mean NEI2005)
and a simple physical environment (Knote et al. 2015)
"""
from dsmacc import base_model, dynenv_model
from scipy.constants import Avogadro
# mod = model();
# alternatively, use a file ('test.dat') to make a dynamic
# physical environment. Add variables as you see fit.
# 
import pandas as pd
import io
# Emissions in GMT at LON = 0.
envdata = pd.read_csv(io.StringIO("""JDAY_GMT,TEMP,PBL
2006186.0,288.15,250.0
2006186.04167,288.15,250.0
2006186.08333,288.15,250.0
2006186.125,288.15,250.0
2006186.16667,288.15,250.0
2006186.20833,288.16,300.0
2006186.25,289.0,550.0
2006186.29167,292.75,850.0
2006186.33333,295.93,1120.0
2006186.375,298.52,1300.0
2006186.41667,300.55,1400.0
2006186.45833,302.0,1475.0
2006186.5,302.86,1500.0
2006186.54167,303.15,1500.0
2006186.58333,302.86,1500.0
2006186.625,302.0,1500.0
2006186.66667,300.55,1500.0
2006186.70833,298.53,1500.0
2006186.75,295.93,1500.0
2006186.79167,292.75,1500.0
2006186.83333,289.0,1500.0
2006186.875,288.15,250.0
2006186.91667,288.15,250.0
2006186.95833,288.15,250.0
2006187.0,288.15,250.0
""")).to_dict(orient = 'list')
#JDAY_GMT,ALD2,ALDX,CH4,CL2,CO,ETH,ETHA,ETOH,FORM,HONO,IOLE,ISOP,MEOH,NH3,NO,NO2,OLE,PAR,SESQ,SO2,SULF,TERP,TOL,XYL
emissdata = pd.read_csv(io.StringIO("""JDAY_GMT,CH3CHO,C2H5CHO,CH4,CL2,CO,C2H4,C2H6,C2H5OH,HCHO,HONO,BUT1ENE,C5H8,CH3OH,NH3,NO,NO2,C3H6,NC4H10,APINENE,SO2,SULF,CARENE,TOLUENE,OXYL
2006186.0000,6.793e-15,2.346e-15,1.430e-14,1.895e-16,2.613e-13,1.638e-14,5.384e-15,1.662e-14,1.372e-14,3.130e-16,1.524e-14,1.007e-17,1.392e-15,2.869e-14,4.731e-14,4.229e-15,1.780e-14,1.688e-13,2.104e-15,1.333e-15,1.312e-17,3.142e-14,1.336e-15,1.004e-15
2006186.0417,6.437e-15,2.225e-15,1.358e-14,1.895e-16,2.279e-13,1.548e-14,5.043e-15,1.574e-14,1.301e-14,2.860e-16,1.446e-14,9.653e-18,1.320e-15,2.630e-14,4.386e-14,3.892e-15,1.686e-14,1.579e-13,1.908e-15,1.236e-15,1.208e-17,2.988e-14,1.198e-15,8.914e-16
2006186.0833,6.168e-15,2.134e-15,1.317e-14,1.895e-16,2.115e-13,1.481e-14,4.818e-15,1.510e-14,1.247e-14,2.732e-16,1.385e-14,9.375e-18,1.288e-15,2.450e-14,4.215e-14,3.733e-15,1.616e-14,1.509e-13,1.763e-15,1.191e-15,1.167e-17,2.867e-14,1.133e-15,8.361e-16
2006186.1250,5.966e-15,2.068e-15,1.318e-14,1.895e-16,2.115e-13,1.435e-14,4.711e-15,1.465e-14,1.206e-14,2.741e-16,1.339e-14,9.306e-18,1.298e-15,2.375e-14,4.212e-14,3.723e-15,1.565e-14,1.474e-13,1.651e-15,1.198e-15,1.167e-17,2.771e-14,1.134e-15,8.402e-16
2006186.1667,5.836e-15,2.026e-15,1.383e-14,1.895e-16,2.396e-13,1.412e-14,4.758e-15,1.444e-14,1.178e-14,2.986e-16,1.305e-14,9.375e-18,1.379e-15,2.449e-14,4.500e-14,3.988e-15,1.535e-14,1.489e-13,1.563e-15,1.293e-15,1.264e-17,2.694e-14,1.249e-15,9.435e-16
2006186.2083,5.794e-15,2.015e-15,1.556e-14,1.895e-16,3.221e-13,1.427e-14,5.036e-15,1.449e-14,1.167e-14,3.770e-16,1.285e-14,1.007e-17,1.544e-15,2.721e-14,5.418e-14,4.892e-15,1.533e-14,1.579e-13,1.494e-15,1.511e-15,1.465e-17,2.633e-14,1.552e-15,1.209e-15
2006186.2500,5.922e-15,2.049e-15,2.045e-14,1.895e-16,5.269e-13,1.532e-14,5.726e-15,1.497e-14,1.185e-14,5.458e-16,1.283e-14,1.188e-17,1.803e-15,3.204e-14,7.391e-14,6.742e-15,1.594e-14,1.819e-13,1.439e-15,1.878e-15,1.785e-17,2.584e-14,2.334e-15,1.911e-15
2006186.2917,6.161e-15,2.124e-15,2.581e-14,1.895e-16,7.367e-13,1.664e-14,6.629e-15,1.586e-14,1.223e-14,7.207e-16,1.306e-14,1.525e-14,6.311e-15,3.972e-14,9.461e-14,8.718e-15,1.704e-14,2.141e-13,1.426e-15,2.349e-15,2.222e-17,2.578e-14,3.281e-15,2.719e-15
2006186.3333,6.881e-15,2.373e-15,2.919e-14,1.895e-16,8.646e-13,1.852e-14,7.694e-15,1.800e-14,1.363e-14,7.949e-16,1.449e-14,9.154e-14,2.773e-14,5.593e-14,1.047e-13,9.629e-15,2.010e-14,2.573e-13,1.691e-15,2.830e-15,2.715e-17,2.834e-14,4.169e-15,3.374e-15
2006186.3750,8.010e-15,2.778e-15,3.009e-14,1.895e-16,8.877e-13,2.072e-14,8.727e-15,2.107e-14,1.607e-14,7.975e-16,1.685e-14,2.194e-13,6.261e-14,8.090e-14,1.073e-13,9.866e-15,2.456e-14,3.037e-13,2.254e-15,3.334e-15,3.153e-17,3.303e-14,4.842e-15,3.782e-15
2006186.4167,9.276e-15,3.205e-15,3.237e-14,1.895e-16,9.649e-13,2.368e-14,9.861e-15,2.472e-14,1.854e-14,8.183e-16,1.969e-14,3.785e-13,1.046e-13,1.110e-13,1.115e-13,1.022e-14,3.006e-14,3.582e-13,3.045e-15,3.640e-15,3.472e-17,3.872e-14,5.742e-15,4.388e-15
2006186.4583,1.084e-14,3.720e-15,3.506e-14,1.895e-16,1.094e-12,2.720e-14,1.100e-14,2.885e-14,2.179e-14,8.788e-16,2.289e-14,5.392e-13,1.460e-13,1.471e-13,1.202e-13,1.091e-14,3.597e-14,4.176e-13,4.089e-15,4.012e-15,3.708e-17,4.524e-14,6.793e-15,5.090e-15
2006186.5000,1.229e-14,4.180e-15,3.593e-14,1.895e-16,1.154e-12,3.027e-14,1.191e-14,3.309e-14,2.459e-14,9.126e-16,2.608e-14,6.624e-13,1.776e-13,1.867e-13,1.249e-13,1.136e-14,4.105e-14,4.722e-13,5.313e-15,4.188e-15,3.861e-17,5.185e-14,7.772e-15,5.639e-15
2006186.5417,1.367e-14,4.622e-15,3.619e-14,1.895e-16,1.210e-12,3.286e-14,1.259e-14,3.705e-14,2.752e-14,9.258e-16,2.884e-14,7.442e-13,1.988e-13,2.195e-13,1.272e-13,1.164e-14,4.498e-14,5.229e-13,6.467e-15,4.453e-15,3.944e-17,5.740e-14,8.859e-15,6.202e-15
2006186.5833,1.463e-14,4.945e-15,3.651e-14,1.895e-16,1.264e-12,3.487e-14,1.309e-14,3.912e-14,2.962e-14,9.546e-16,3.082e-14,8.065e-13,2.149e-13,2.387e-13,1.309e-13,1.209e-14,4.794e-14,5.449e-13,7.411e-15,4.627e-15,3.993e-17,6.158e-14,8.995e-15,6.292e-15
2006186.6250,1.485e-14,5.060e-15,3.814e-14,1.895e-16,1.343e-12,3.646e-14,1.351e-14,3.717e-14,3.004e-14,1.023e-15,3.176e-14,8.305e-13,2.216e-13,2.390e-13,1.379e-13,1.279e-14,4.982e-14,5.039e-13,8.053e-15,4.457e-15,3.965e-17,6.425e-14,6.748e-15,5.283e-15
2006186.6667,1.481e-14,5.044e-15,3.808e-14,1.895e-16,1.353e-12,3.676e-14,1.347e-14,3.651e-14,2.978e-14,1.037e-15,3.201e-14,8.206e-13,2.199e-13,2.196e-13,1.386e-13,1.295e-14,5.010e-14,4.873e-13,8.255e-15,4.208e-15,3.833e-17,6.495e-14,5.970e-15,4.893e-15
2006186.7083,1.451e-14,4.934e-15,3.681e-14,1.895e-16,1.300e-12,3.594e-14,1.300e-14,3.567e-14,2.920e-14,9.794e-16,3.137e-14,7.379e-13,1.994e-13,1.850e-13,1.316e-13,1.225e-14,4.816e-14,4.691e-13,7.990e-15,3.977e-15,3.590e-17,6.362e-14,5.710e-15,4.661e-15
2006186.7500,1.370e-14,4.669e-15,3.353e-14,1.895e-16,1.122e-12,3.366e-14,1.215e-14,3.374e-14,2.759e-14,8.452e-16,2.970e-14,5.575e-13,1.533e-13,1.390e-13,1.159e-13,1.064e-14,4.351e-14,4.304e-13,7.266e-15,3.709e-15,3.396e-17,6.022e-14,5.129e-15,4.151e-15
2006186.7917,1.237e-14,4.234e-15,2.932e-14,1.895e-16,8.967e-13,3.023e-14,1.113e-14,3.077e-14,2.479e-14,7.135e-16,2.709e-14,3.214e-13,9.067e-14,9.052e-14,1.001e-13,9.117e-15,3.684e-14,3.771e-13,6.150e-15,3.379e-15,3.271e-17,5.485e-14,4.304e-15,3.453e-15
2006186.8333,1.074e-14,3.689e-15,2.559e-14,1.895e-16,7.182e-13,2.615e-14,9.806e-15,2.662e-14,2.158e-14,6.066e-16,2.352e-14,1.066e-13,3.176e-14,6.047e-14,8.665e-14,7.808e-15,2.939e-14,3.144e-13,4.702e-15,2.984e-15,2.924e-17,4.740e-14,3.475e-15,2.785e-15
2006186.8750,1.085e-14,3.727e-15,2.560e-14,1.895e-16,7.209e-13,2.641e-14,9.864e-15,2.688e-14,2.180e-14,6.073e-16,2.379e-14,1.017e-13,3.030e-14,6.137e-14,8.626e-14,7.818e-15,2.954e-14,3.161e-13,4.806e-15,2.984e-15,2.924e-17,4.791e-14,3.478e-15,2.786e-15
2006186.9167,9.108e-15,3.134e-15,2.113e-14,1.895e-16,5.325e-13,2.225e-14,8.184e-15,2.269e-14,1.819e-14,5.050e-16,2.026e-14,1.297e-15,2.429e-15,4.723e-14,7.236e-14,6.568e-15,2.398e-14,2.546e-13,3.548e-15,2.298e-15,2.347e-17,4.099e-14,2.606e-15,2.061e-15
2006186.9583,8.022e-15,2.765e-15,1.806e-14,1.895e-16,4.145e-13,1.956e-14,6.859e-15,1.980e-14,1.611e-14,4.260e-16,1.788e-14,1.181e-17,1.760e-15,3.828e-14,6.179e-14,5.570e-15,2.111e-14,2.133e-13,2.819e-15,1.820e-15,1.826e-17,3.649e-14,2.013e-15,1.571e-15
2006187.0000,7.295e-15,2.517e-15,1.584e-14,1.895e-16,3.245e-13,1.770e-14,5.954e-15,1.791e-14,1.470e-14,3.601e-16,1.631e-14,1.076e-17,1.523e-15,3.218e-14,5.325e-14,4.781e-15,1.916e-14,1.866e-13,2.383e-15,1.508e-15,1.493e-17,3.350e-14,1.627e-15,1.243e-15
""")).to_dict(orient = 'list')

# Set global variables
globvar = {
    'JDAY_GMT': 2006186.0,
    'LAT': 30.0, 'LON': 0.0, 'TEMP': 288.0, 'PRESS': 101325.0,
    'H2O': 9500000.0 / 1e9 * Avogadro * 1e-6 * 101325. / 298./ 8.314 
}

initcond = {
    'HNO3': 0.754, 'NO': 1.7879, 'NO2': 5.9328, 'N2O5': 0.0028, 'NO3': 0.0002,
    'O3': 41.3038, 'SO2': 13.63, 'CO': 142.2, 'CH4': 1879.,
    'C2H6': 8.658, 'C2H4': 1.458, 'C3H8': 6.59,
    'HCHO': 2.7141, 'CH3OH': 6.1246, 'HCOOH': 0.1881, 'CH3CHO': 1.8779,
    'CH3COCH3': 2.3931, 'MEK': 0.7013, 'NC4H10': 7.171,
    'PAN': 0.6496, 'PPN': 0.0825
}

bkgcond = {k: v * 0.5 for k, v in initcond.items()}
bkgcond['O3'] = initcond['O3']

mod = dynenv_model(
    envdata=envdata, emissdata=emissdata, bkgdata=bkgcond, modelname='cri',
    outconcpath='trajectoryconc.dat', outratepath='trajectoryrate.dat'
)

# Start time, hours of simulation, seconds/step, starting conc, environment
mod.run(2006186.0, 24, 180, conc_ppb=initcond, globvar=globvar)
